# modified from https://github.com/keras-team/keras/blob/master/.travis.yml
sudo: required
#dist: trusty
language: python
cache: ccache
matrix:
    include:
        - python: 3.6
          env: KERAS_BACKEND=tensorflow PLUMED_CC=gcc PLUMED_CXX=g++ CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx"
        - python: 3.6
          env: KERAS_BACKEND=theano THEANO_FLAGS=optimizer=fast_compile PLUMED_CC=gcc PLUMED_CXX=g++ CONFIG_FLAGS="--enable-debug"
        - python: 3.6
          env: KERAS_BACKEND=cntk PYTHONWARNINGS=ignore PLUMED_CC=gcc PLUMED_CXX=g++ CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx"
install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION pytest-cov pandas
  - source activate test-environment
  - pip install --only-binary=numpy numpy nose cython h5py theano
  - conda install mkl mkl-service
  - export LD_LIBRARY_PATH=$HOME/miniconda/envs/test-environment/lib/:$LD_LIBRARY_PATH
  - conda install Pillow;
  - pip install argparse
  - pip install -e .[tests]
  - pip install tensorflow-cpu
  - pip install https://cntk.ai/PythonWheel/CPU-Only/cntk-2.7.post1-cp36-cp36m-linux_x86_64.whl;
  - export CORE_CHANGED=False
  - for entry in `git diff --name-only HEAD~1`; do if [[ "$entry" == "keras/backend/"* ]] || [[ "$entry" == "keras/engine/"* ]] || [[ "$entry" == "keras/layers/"* ]]; then export CORE_CHANGED=True; fi; done
  - export APP_CHANGED=False
  - for entry in `git diff --name-only HEAD~1`; do if [[ "$entry" == "keras/applications/"* ]]; then export APP_CHANGED=True; fi; done
  - rm -rf ~/mpi
  - mkdir ~/mpi
  - pushd ~/mpi
  - wget http://cntk.ai/PythonWheel/ForKeras/depends/openmpi_1.10-3.zip
  - unzip ./openmpi_1.10-3.zip
  - sudo dpkg -i openmpi_1.10-3.deb
  - popd
  - pip install codecov
  - ccache -s
  - git clone https://github.com/plumed/plumed2.git
  - cd plumed2
  - ./configure CXX="ccache $(which $PLUMED_CXX)" CC=$(which $PLUMED_CC) CXXFLAGS="$PLUMED_CXXFLAGS" LDFLAGS="$PLUMED_LDFLAGS" CPPFLAGS="$PLUMED_CPPFLAGS" $CONFIG_FLAGS --prefix="$HOME/opt" --enable-modules=annfunc
  - make -j 4
  - make install
  - cd ..
  - export PATH=$PATH:/home/travis/opt/bin/
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/travis/opt/lib/

script:
  - export MKL_THREADING_LAYER="GNU"
  - python -c "import keras.backend"
  - sed -i -e 's/"backend":[[:space:]]*"[^"]*/"backend":\ "'$KERAS_BACKEND'/g' ~/.keras/keras.json;
  - echo -e "Running tests with the following config:\n$(cat ~/.keras/keras.json)"
  - KERAS_BACKEND=$KERAS_BACKEND PYTHONPATH=$PWD:$PYTHONPATH py.test --cov=anncolvar tests/;

after_success:
  - bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}


