name: Anncolvar CI

on: [ push, pull_request ]

env:
  CORE_CHANGED: false
  APP_CHANGED: false
  MKL_THREADING_LAYER: GNU
  PLUMED_CC: gcc
  PLUMED_CXX: g++
  CUDA_VISIBLE_DEVICES: -1

jobs:
  install-anncolvar:
    name: ${{ matrix.os }}, python ${{ matrix.python-version }}, ${{ matrix.keras-backend }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-18.04 ]
        python-version: [ 3.6.3 ]
        keras-backend:
          - KERAS_BACKEND=tensorflow CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx"
          - KERAS_BACKEND=theano THEANO_FLAGS=optimizer=fast_compile CONFIG_FLAGS="--enable-debug"
          - KERAS_BACKEND=cntk PYTHONWARNINGS=ignore CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx"

    steps:
      - uses: actions/checkout@v2
        with:
          python-version: ${{ matrix.python-version }}
          env: ${{ matrix.keras-backend }}
      - name: Install Miniconda
        run: |
          wget https://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          echo "$HOME/miniconda/bin:$PATH" >> $GITHUB_PATH
          echo "$HOME/miniconda/envs/test-environment/lib/:$LD_LIBRARY_PATH" >> $GITHUB_PATH
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a
          conda create -q -n test-environment python=${{ matrix.python-version }} pandas

      - name: Upgrade pip for python ${{ matrix.python-version }}
        run: |
          python --version
          python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          conda install numpy nose cython h5py theano tqdm pytest pytest-cov tensorflow
          conda install -c conda-forge mdtraj mkl mkl-service
          pip install -e .[tests]

      - name: Update Ubuntu packages and install ccache
        if: ${{ startsWith( matrix.os , 'ubuntu') }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y ccache

      - name: Install Plumed 2 and run tests
        run: |
          git clone https://github.com/plumed/plumed2.git
          cd plumed2
          ./configure CXX="ccache $(which $PLUMED_CXX)" CC=$(which $PLUMED_CC) --prefix="$HOME/opt" --enable-modules=annfunc
          make -j 4
          make install
          source sourceme.sh
          plumed -h
          cd ..
          python -c "import keras.backend"
          sed -i -e 's/"backend":[[:space:]]*"[^"]*/"backend":\ "'$KERAS_BACKEND'/g' ~/.keras/keras.json;
          echo -e "Running tests with the following config:\n$(cat ~/.keras/keras.json)"
          KERAS_BACKEND=$KERAS_BACKEND pytest --cov=anncolvar tests/

